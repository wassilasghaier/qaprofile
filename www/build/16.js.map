{"version":3,"sources":["../../src/pages/register/register.module.ts","../../src/pages/register/register.ts"],"names":[],"mappings":"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","file":"16.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RegisterPage } from './register';\n\n@NgModule({\n  declarations: [\n    RegisterPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RegisterPage),\n  ],\n})\nexport class RegisterPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ToastController, Tabs, LoadingController } from 'ionic-angular';\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { UserserviceProvider, User } from '../../providers/userservice/userservice';\nimport { AlertController } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\n\n\n\n@IonicPage()\n@Component({\n   selector: 'page-register',\n   templateUrl: 'register.html',\n})\nexport class RegisterPage {\n   /**\n    * @name form\n    * @type {FormGroup} \n    * @public\n    * @description     Define FormGroup property for managing form validation / data retrieval\n    */\n   exampleForm: FormGroup;\n   email: string = '';\n   password: string = '';\n   phone: string = '';\n   name: string = '';\n   account: { name: string, email: string, phone: number, password: string };\n   info: User;\n   STORAGE_VALUE: string = '';\n    id: string;\n   page: string;\n   tab:Tabs; \n   baseURL:string;\n   /**\n    * @name requestName\n    * @type {Any} \n    * @public\n    * @description     Model for managing requestName field\n    */\n   public requestName: any;\n   /**\n    * @name requestDescription\n    * @type {Any} \n    * @public\n    * @description     Model for managing requestDescription field\n    */\n   public requestDescription: any;\n\n\n   /**\n      * @name requestEmail\n      * @type {Any} \n      * @public\n      * @email     Model for managing requestEmail field\n      */\n   public requestEmail: any;\n\n   /**\n       * @name requestMobile\n       * @type {Any} \n       * @public\n       * @mobile     Model for managing requestMobile field\n       */\n   public requestMobile: any;\n\n\n\n   /**\n    * @name isEdited\n    * @type {Boolean} \n    * @public\n    * @description     Flag to be used for checking whether we are adding/editing an entry\n    */\n   public isEdited: boolean = false;\n   /**\n    * @name hideForm\n    * @type {Boolean} \n    * @public\n    * @description     Flag to hide the form upon successful completion of remote operation\n    */\n   public hideForm: boolean = false;\n   /**\n    * @name pageTitle\n    * @type {String} \n    * @public\n    * @description     Property to help set the page title\n    */\n   public pageTitle: string;\n   /**\n    * @name recordID\n    * @type {String} \n    * @public\n    * @description     Property to store the recordID for when an existing entry is being edited\n    */\n   public recordID: any = null;\n\n   // Initialise module classes\n   constructor(public navCtrl: NavController,\n      public http: HttpClient,\n      public NP: NavParams,\n      public fb: FormBuilder,\n      public alertCtrl: AlertController,\n      public toastController: ToastController,\n      public userservice: UserserviceProvider,\n      private storage: Storage,\n      public loadingCtrl: LoadingController) {\n\n      // Create form builder validation rules\n      this.exampleForm = fb.group({\n         \"name\": new FormControl('', [Validators.required]),\n         'email': new FormControl('', [Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]),\n         \"phone\": new FormControl('', [Validators.required,]),\n         'password': new FormControl('', [Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+$'), Validators.minLength(4)]),\n      });\n      this.tab = this.navCtrl.parent;\n      this.baseURL= this.userservice.baseURL;\n      this.page=this.NP.get('p');\n      console.log(this.page);\n   }\n\n\n\n\n   /**\n    * Triggered when template view is about to be entered\n    * Determine whether we adding or editing a record\n    * based on any supplied navigation parameters\n    *\n    * @public\n    * @method ionViewWillEnter \n    * @return {None}\n    */\n   ionViewWillEnter(): void {\n      this.getValue();\n\n\n   }\n   async presentLoading() {\n      const loading = await this.loadingCtrl.create({\n         content: 'Please wait...',\n      });\n      return await loading.present();\n   }\n   sigin() {\n      let loading = this.loadingCtrl.create({\n         content: 'Please wait...'\n       });\n      loading.present();\n      let credential = { name: this.exampleForm.value['name'], email: this.exampleForm.value['email'], phone: this.exampleForm.value['phone'], password: this.exampleForm.value['password'] };\n      this.http.post(`${this.baseURL}/user/create`, credential, { observe: 'response' }).subscribe(data => {\n         let user: any\n         if (data.status == 200)\n         loading.dismiss();\n         user = data.body;\n         this.info = user;\n         this.userservice.setUser(this.info);\n         this.saveValue(this.info);\n         this.getValue();\n         this.sendNotification('user create successfully');\n         this.goback();\n      }, (error) => {\n         loading.dismiss();\n         this.sendNotification(error.error);\n      });\n\n\n   }\n\n   resetFields(): void {\n      this.requestName = \"\";\n      this.requestEmail = \"\";\n      this.requestMobile = \"\";\n      this.requestDescription = \"\";\n   }\n   goToTab3 (){\n      this.tab.select(4);\n      }\n   sendNotification(message: string): void {\n      let notification = this.toastController.create({\n         message: message,\n         duration: 3000\n      });\n      notification.present();\n   }\n   \n   saveValue(user: User) {\n\n      console.log(user);\n      \n\n      if (user) {\n\n         this.storage.set('ID', user.id);\n         this.storage.set('NAME', user.name);\n\n      }\n\n   }\n   getValue() {\n      this.storage.get('ID').then((result) => {\n         this.id=result;\n         console.log('id',this.id);\n      });\n   }\n   showAlert(msg: string, title: string)\n   {\n      let alert = this.alertCtrl.create({\n       title: title,\n       subTitle:(msg),\n       buttons: ['OK']\n       });\n      \n       alert.present();\n       \n   }\n   goback() {\n    if(this.page != null || this.page != undefined || this.page !='')\n    {this.navCtrl.push(this.page);} \n    else \n    {\n     //profile\n     this.navCtrl.pop();\n     } \n   }   \n   \n}\n\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts"],"sourceRoot":""}